
import os
import streamlit as st
import pdfplumber
import docx
import requests

# Render t·ª± cung c·∫•p PORT qua bi·∫øn m√¥i tr∆∞·ªùng
port = int(os.environ.get("PORT", 8501))
st.set_page_config(page_title="Chatbot PCCC", layout="wide")

API_KEY = os.environ.get("OPENROUTER_API_KEY", "")
MODEL = "mistralai/mistral-7b-instruct"
API_URL = "https://openrouter.ai/api/v1/chat/completions"
HEADERS = {
    "Authorization": f"Bearer {API_KEY}",
    "Content-Type": "application/json"
}

def extract_text(file):
    text = ""
    if file.name.endswith(".txt"):
        text = file.read().decode("utf-8")
    elif file.name.endswith(".docx"):
        doc = docx.Document(file)
        text = "\n".join([para.text for para in doc.paragraphs])
    elif file.name.endswith(".pdf"):
        with pdfplumber.open(file) as pdf:
            for page in pdf.pages:
                text += page.extract_text() + "\n"
    return text

def ask_openrouter(context, question):
    prompt = f"N·ªôi dung t√†i li·ªáu:\n{context}\n\nC√¢u h·ªèi: {question}\nTr·∫£ l·ªùi:"
    payload = {
        "model": MODEL,
        "messages": [
            {"role": "system", "content": "B·∫°n l√† tr·ª£ l√Ω AI tr·∫£ l·ªùi b·∫±ng ti·∫øng Vi·ªát, ch√≠nh x√°c, r√µ r√†ng."},
            {"role": "user", "content": prompt}
        ]
    }
    response = requests.post(API_URL, headers=HEADERS, json=payload)
    if response.status_code == 200:
        return response.json()["choices"][0]["message"]["content"].strip()
    else:
        return f"L·ªói {response.status_code}: {response.text}"

st.title("üí¨ Chatbot PCCC (OpenRouter)")
st.markdown("T·∫£i t√†i li·ªáu üìÑ (.txt, .docx, .pdf) v√† ƒë·∫∑t c√¢u h·ªèi")

uploaded_file = st.file_uploader("T·∫£i t√†i li·ªáu", type=["txt", "docx", "pdf"])
question = st.text_input("Nh·∫≠p c√¢u h·ªèi:")

if uploaded_file and question:
    content = extract_text(uploaded_file)
    if content:
        with st.spinner("ƒêang t·∫°o ph·∫£n h·ªìi..."):
            answer = ask_openrouter(content, question)
        st.success("üü¢ Tr·∫£ l·ªùi:")
        st.write(answer)
    else:
        st.warning("Kh√¥ng ƒë·ªçc ƒë∆∞·ª£c n·ªôi dung t·ª´ t√†i li·ªáu.")
